# This is a docker-compose file that will start
#  - a postgres database,
#  - a manifest-ledger node,
#   -a postgrest server, and,
#  - initialize the manifest-ledger node with some transactions.
# This is the base infrastructure that will be used by the YACI service.
services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: foobar
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U postgres -d postgres
      interval: 10s
      timeout: 5s
      retries: 5

  manifest-ledger:
    image: ghcr.io/liftedinit/manifest-ledger:v0.0.1-rc.3
    volumes:
        - manifest-ledger-bin:/usr/bin
        - manifest-ledger-data:/persistent
        - ./init_manifest_ledger.sh:/usr/local/bin/init_manifest_ledger.sh
    ports:
      - "9090:9090"
    entrypoint: ["/bin/bash", "-c"]
    env_file: .env
    command: ["/usr/local/bin/init_manifest_ledger.sh"]
    healthcheck:
      test: manifestd status | grep '"earliest_block_height":"1"'
      interval: 10s
      timeout: 5s
      retries: 5

  # Setup some transactions on the blockchain
  manifest-ledger-tx:
    restart: no
    image: ghcr.io/liftedinit/manifest-ledger:v0.0.1-rc.3
    volumes:
      - manifest-ledger-bin:/usr/bin
      - manifest-ledger-data:/persistent
      - ./init_manifest_ledger_txs.sh:/usr/local/bin/init_manifest_ledger_txs.sh
    entrypoint: ["/bin/bash", "-c"]
    env_file: .env
    # The last sleep is to give the transactions time to be committed. Do not remove it.
    # The following will results in the following transactions:
    #  - 2x Send
    #  - 1x CreateDenom
    #  - 1x SetDenomMetadata
    #  - 2x SubmitProposal
    #  - 2x Vote
    #  - 2x ExecuteProposal
    #  - 2x Payout (from the executed proposals)
    #  - 1x Create Group (with policy as admin)
    #
    # For a total of TBD transactions,
    # TODO: Fix numbers below
    #  - 11 transactions under ADDR1
    #  - 3 transactions under ADDR2
    #  - 6 transactions under POA_ADMIN_ADDRESS
    #  - 1 transaction under USER_GROUP_ADDRESS
    command: ["/usr/local/bin/init_manifest_ledger_txs.sh"]
    depends_on:
      manifest-ledger:
        condition: service_healthy

  postgrest:
    image: postgrest/postgrest
    restart: always
    environment:
      PGRST_DB_URI: postgres://postgres:foobar@db:5432/postgres
      PGRST_DB_SCHEMA: api
      PGRST_DB_ANON_ROLE: web_anon
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      manifest-ledger-tx:
        condition: service_completed_successfully # We want to wait for the transactions to be completed before starting the postgrest server

volumes:
  manifest-ledger-bin:
  manifest-ledger-data:
  postgres-data:
